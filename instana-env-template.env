DOWNLOAD_KEY=""
SALES_KEY=""

# uncomment instana version
#INSTANA_VERSION="287"
#INSTANA_VERSION="277"

INSTANA_UNIT_NAME=unit0
INSTANA_TENANT_NAME=tenant0

INSTANA_BASE_DOMAIN="instana.example.com"
INSTANA_TENANT_DOMAIN="${INSTANA_UNIT_NAME}-${INSTANA_TENANT_NAME}.${INSTANA_BASE_DOMAIN}"
INSTANA_AGENT_ACCEPTOR="agent-acceptor.${INSTANA_BASE_DOMAIN}"
INSTANA_OTLP_GRPC_ACCEPTOR="otlp-grpc.${INSTANA_BASE_DOMAIN}"
INSTANA_OTLP_HTTP_ACCEPTOR="otlp-http.${INSTANA_BASE_DOMAIN}"

INSTANA_ADMIN_USER="admin@instana.local"
INSTANA_ADMIN_PASSWORD="password"

# kubernetes cli
KUBECTL_OC="oc"
KUBECTL_KUBECTL="kubectl"

KUBECTL=$KUBECTL_OC

# kubernetes platform
PLATFORM_OCP="ocp"
PLATFORM_EKS="eks"
PLATFORM_GCP="gcp"
PLATFORM_K8S="k8s"

PLATFORM=$PLATFORM_OCP

# podman cli
PODMAN=podman
PODMAN_TLS_VERIFY=true

# core resource profile
CORE_RESOURCE_PROFILE_SMALL="small"
CORE_RESOURCE_PROFILE_MEDIUM="medium"
CORE_RESOURCE_PROFILE_LARGE="large"

CORE_RESOURCE_PROFILE=$CORE_RESOURCE_PROFILE_SMALL

CORE_TOKEN_SECRET=mytokensecret

# instana registry
INSTANA_REGISTRY="artifact-public.instana.io"

# private registry
PRIVATE_DOCKER_SERVER="docker.szesto.io"
PRIVATE_REGISTRY_SUBPATH=""
PRIVATE_REGISTRY=${PRIVATE_DOCKER_SERVER}${PRIVATE_REGISTRY_SUBPATH}
PRIVATE_REGISTRY_USER="admin"
PRIVATE_REGISTRY_PASSWORD="password"

# cert manager registry
QUAY_REGISTRY="quay.io"

# clickhouse users
CLICKHOUSE_DEFAULT="default"
CLICKHOUSE_DEFAULT_PASS="clickhouse-default-pass"

CLICKHOUSE_USER="clickhouse-user"
CLICKHOUSE_USER_PASS="clickhouse-default-pass"

# beeinstana admin password
BEEINSTANA_ADMIN_PASS=adminpass

# by default 2000Gi
BEEINSTANA_LIVE_VOLUME_SIZE=500Gi

### File names for backend images
INSTANA_BACKEND_IMAGE_LIST_FILE="backend-image-list.list"
PULL_BACKEND_IMAGES_SCRIPT="backend-pull-images.sh"
TAG_BACKEND_IMAGES_SCRIPT="backend-tag-images.sh"
PUSH_BACKEND_IMAGES_SCRIPT="backend-push-images.sh"

### File names for datastore images
INSTANA_DATASTORE_IMAGE_LIST_FILE="datastore-image-list.list"
PULL_DATASTORE_IMAGES_SCRIPT="datastore-pull-images.sh"
TAG_DATASTORE_IMAGES_SCRIPT="datastore-tag-images.sh"
PUSH_DATASTORE_IMAGES_SCRIPT="datastore-push-images.sh"

### File names for cert manager images
CERT_MGR_IMAGE_LIST_FILE="cert-manager-image-list.list"
PULL_CERT_MGR_IMAGES_SCRIPT="cert-manager-pull-images.sh"
TAG_CERT_MGR_IMAGES_SCRIPT="cert-manager-tag-images.sh"
PUSH_CERT_MGR_IMAGES_SCRIPT="cert-manager-push-images.sh"

### File names for manifests
MANIFEST_FILENAME_ZOOKEEPER=zookeeper.yaml
MANIFEST_FILENAME_CLICKHOUSE=clickhouse.yaml
MANIFEST_FILENAME_CLICKHOUSE_SCC=clickhouse-scc.yaml
MANIFEST_FILENAME_KAFKA=kafka.yaml
MANIFEST_FILENAME_ELASTICSEARCH=elasticsearch.yaml
MANIFEST_FILENAME_POSTGRES=postgres.yaml
MANIFEST_FILENAME_POSTGRES_SCC=postgres-scc.yaml        # OCP
MANIFEST_FILENAME_CASSANDRA=cassandra.yaml
MANIFEST_FILENAME_CASSANDRA_SCC=cassandra-scc.yaml      # OCP
MANIFEST_FILENAME_BEEINSTANA=beeinstana.yaml
MANIFEST_FILENAME_CORE=core.yaml
MANIFEST_FILENAME_UNIT=unit.yaml

### Storage classes
RWO_STORAGECLASS=ocs-storagecluster-ceph-rbd
RWX_STORAGECLASS=ocs-storagecluster-cephfs

#
# raw spans storage types
#
RAW_SPANS_TYPE_S3="s3"
RAW_SPANS_TYPE_PVC="pvc"
RAW_SPANS_TYPE_GCP="gcp"
RAW_SPANS_TYPE=$RAW_SPANS_TYPE_PVC

#
# raw spans s3 storage
#
RAW_SPANS_S3_ENDPOINT=""
RAW_SPANS_S3_REGION=""
RAW_SPANS_S3_BUCKET=""
RAW_SPANS_S3_PREFIX=""
RAW_SPANS_S3_STORAGE_CLASS=""
RAW_SPANS_S3_BUCKET_LONG_TERM=""
RAW_SPANS_S3_PREFIX_LONG_TERM=""
RAW_SPANS_S3_STORAGE_CLASS_LONG_TERM=""

RAW_SPANS_S3_BUCKET_NAME="raw-spans-bucket"
RAW_SPANS_S3_BUCKET_ARN="arn:aws:s3:::$RAW_SPANS_S3_BUCKET_NAME"

#
# aws iam credentials
#
AWS_IAM_ACCESS_KEY_ID=""
AWS_IAM_SECRET_KEY=""

#
# aws s3 role arn
#
AWS_EKS_ROLE_ARN=""

#
# gcp object storage authentication
#
GCP_SERVICE_ACCOUNT="rawspans@myproject.iam.gserviceaccount.com"
GCP_SERVICE_ACCOUNT_KEY="gcp-service-account-key"

#
# smtp configuration
#
SMTP_USER="admin@examle.com"
SMTP_PASSWORD="password"

SMTP_FROM=""
SMTP_HOST=""
SMTP_PORT=""
SMTP_USE_SSL=false
SMTP_START_TLS=false

#
# proxy configuration
#
PROXY_USER=""
PROXY_PASSWORD=""

#
# k8s psa label
#
K8S_PSA_LABEL_PRIVILEGED="privileged"
K8S_PSA_LABEL_BASELINE="baseline"
K8S_PSA_LABEL_RESTRICTED="restricted"

K8S_PSA_LABEL=$K8S_PSA_LABEL_PRIVILEGED
