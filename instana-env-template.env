DOWNLOAD_KEY=""
SALES_KEY=""

if [[ -f ../kubeconfig ]]; then export KUBECONFIG="`pwd`/../kubeconfig"; fi

#
# set install profile
# install profile is matched to keys in cr env yaml files.
# do not use 'default' as install profile value
# value 'template' is a placeholder
# if install profile does not match any key in cr env yaml files
# then 'default' key will be used if defined, otherwise cr template value
# will be left unchanged in the final cr.
#
INSTANA_INSTALL_PROFILE=""

#
# plugin / instana version combination
# see: release.yaml, remove older versions
#

#INSTANA_PLUGIN_VERSION="1.2.1"
#INSTANA_VERSION="287"
#INSTANA_VERSION="289"

#INSTANA_PLUGIN_VERSION="1.3.0"
#INSTANA_VERSION="293"

# instana unit-tenant
INSTANA_UNIT_NAME=""
INSTANA_TENANT_NAME=""

#  instana base domain
INSTANA_BASE_DOMAIN=""

# instana admin user
INSTANA_ADMIN_USER="admin@instana.local"
INSTANA_ADMIN_PASSWORD=""

# kubernetes platform: ocp, eks, gcp, k8s
PLATFORM=""

# kubernetes cli: oc, kubectl
KUBECTL=""

# podman cli: podman, docker
PODMAN=""

# podman tls verify command line option
#PODMAN_TLS_VERIFY="--tls-verify" # podman, use tls
#PODMAN_TLS_VERIFY="--tlsverify" # docker, tls verify
#PODMAN_TLS_VERIFY="--tls" # docker, no tls verify
#PODMAN_TLS_VERIFY="" # docker, no tls; podman, use tls

# platform for multi-platform images
PODMAN_IMG_PLATFORM="linux/amd64"

#
# instana registry proxy
#
INSTANA_REGISTRY_PROXY=""
INSTANA_REGISTRY_PROXY_USER=""
INSTANA_REGISTRY_PROXY_PASSWORD=""

#
# image registry
#

# private mirror registry
PRIVATE_DOCKER_SERVER=""
PRIVATE_REGISTRY_SUBPATH=""
# depricated, call private_registry $docker_server $subpath
PRIVATE_REGISTRY=${PRIVATE_DOCKER_SERVER}${PRIVATE_REGISTRY_SUBPATH}

PRIVATE_REGISTRY_USER=""
PRIVATE_REGISTRY_PASSWORD=""

#
# Storage classes
#
RWO_STORAGECLASS=""
RWX_STORAGECLASS=""

#
# k8s namespace psa label: privileged, baseline, restricted
#
K8S_PSA_LABEL="privileged"

#
# datastore credentials
#

# clickhouse
CLICKHOUSE_USER_PASS="clickhouse-user-pass"
CLICKHOUSE_ADMIN_PASS="clickhouse-admin-pass"

# beeinstana 
BEEINSTANA_ADMIN_PASS=adminpass

#
# core
#

# small|medium|large
CORE_RESOURCE_PROFILE="small"

#
# core config
# (instana-core secret)
#

# choose email configuration: smtp, aws ses

# core config email smtp
CORE_CONFIG_EMAIL_SMTP_ENABLE=""
CORE_CONFIG_EMAIL_SMTP_USER=""
CORE_CONFIG_EMAIL_SMTP_PASSWORD=""

# core config email aws ses
CORE_CONFIG_EMAIL_AWS_SES_ENABLE=""
CORE_CONFIG_AWS_IAM_ACCESS_KEY_ID=""
CORE_CONFIG_AWS_IAM_SECRET_KEY=""

# core config proxy
CORE_CONFIG_PROXY_ENABLE=""
CORE_CONFIG_PROXY_USER=""
CORE_CONFIG_PROXY_PASSWORD=""

# core config secret token
CORE_CONFIG_TOKEN_SECRET="mytoken"

# core config service provider key password
CORE_CONFIG_SP_KEY_PASSWORD=""

# openssl don't encrypt private keys -nodes|-noenc
OPENSSL_KEYPASS_ARG=""

#
# core storage pvc
#

#CORE_CONFIG_RAW_SPANS_STORAGE="pvc"

#CORE_CONFIG_SYNTHETICS_STORAGE="pvc"

#CORE_CONFIG_SYNTHETICS_KEYSTORE_STORAGE="pvc"

#CORE_CONFIG_EUM_SOURCE_MAPS_STORAGE="pvc"

#
# core storage s3
#

#CORE_CONFIG_RAW_SPANS_STORAGE="s3"
core_config_raw_spans_s3_endpoint=""
core_config_raw_spans_s3_region=""
core_config_raw_spans_s3_bucket=""
core_config_raw_spans_s3_prefix=""
core_config_raw_spans_s3_storage_class=""
core_config_raw_spans_s3_bucket_long_term=""
core_config_raw_spans_s3_storage_class_long_term=""
core_config_raw_spans_forcePathStyle=""
core_config_raw_spans_s3_access_key_id=""
core_config_raw_spans_s3_secret_access_key=""

#CORE_CONFIG_SYNTHETICS_STORAGE="s3"
core_config_synthetics_s3_endpoint=""
core_config_synthetics_s3_region=""
core_config_synthetics_s3_bucket=""
core_config_synthetics_s3_prefix=""
core_config_synthetics_s3_storage_class=""
core_config_synthetics_s3_bucket_long_term=""
core_config_synthetics_s3_storage_class_long_term=""
core_config_synthetics_s3_forcePathStyle=""
core_config_synthetics_s3_access_key_id=""
core_config_synthetics_s3_secret_access_key=""

#CORE_CONFIG_SYNTHETICS_KEYSTORE_STORAGE="s3"
core_config_synthetics_keystore_s3_endpoint=""
core_config_synthetics_keystore_s3_region=""
core_config_synthetics_keystore_s3_bucket=""
core_config_synthetics_keystore_s3_prefix=""
core_config_synthetics_keystore_s3_storage_class=""
core_config_synthetics_keystore_s3_bucket_long_term=""
core_config_synthetics_keystore_s3_storage_class_long_term=""
core_config_synthetics_keystore_s3_forcePathStyle=""
core_config_synthetics_keystore_s3_access_key_id=""
core_config_synthetics_keystore_s3_secret_access_key=""

#CORE_CONFIG_EUM_SOURCE_MAPS_STORAGE="s3"
core_config_eum_source_maps_s3_endpoint=""
core_config_eum_source_maps_s3_region=""
core_config_eum_source_maps_s3_bucket=""
core_config_eum_source_maps_s3_prefix=""
core_config_eum_source_maps_s3_storage_class=""
core_config_eum_source_maps_s3_bucket_long_term=""
core_config_eum_source_maps_s3_storage_class_long_term=""
core_config_eum_source_maps_s3_forcePathStyle=""
core_config_eum_source_maps_s3_access_key_id=""
core_config_eum_source_maps_s3_secret_access_key=""

#
# core storage gcloud
#

#CORE_CONFIG_RAW_SPANS_STORAGE="gcloud"
core_config_raw_spans_gcloud_bucket=""
core_config_raw_spans_gcloud_prefix=""
core_config_raw_spans_gcloud_storage_class=""
core_config_raw_spans_gcloud_bucket_long_term=""
core_config_raw_spans_gcloud_prefix_long_term=""
core_config_raw_spans_gcloud_storage_class_long_term=""
core_config_raw_spans_gcloud_service_account_key=""

#CORE_CONFIG_SYNTHETICS_STORAGE="gcloud"
core_config_synthetics_gcloud_bucket=""
core_config_synthetics_gcloud_prefix=""
core_config_synthetics_gcloud_storage_class=""
core_config_synthetics_gcloud_bucket_long_term=""
core_config_synthetics_gcloud_prefix_long_term=""
core_config_synthetics_gcloud_storage_class_long_term=""
core_config_synthetics_gcloud_service_account_key=""

#CORE_CONFIG_SYNTHETICS_KEYSTORE_STORAGE="gcloud"
core_config_synthetics_keystore_gcloud_bucket=""
core_config_synthetics_keystore_gcloud_prefix=""
core_config_synthetics_keystore_gcloud_storage_class=""
core_config_synthetics_keystore_glcoud_bucket_long_term=""
core_config_synthetics_keystore_gcloud_prefix_long_term=""
core_config_synthetics_keystore_gcloud_storage_class_long_term=""
core_config_synthetics_keystore_gcloud_service_account_key=""

#CORE_CONFIG_EUM_SOURCE_MAPS_STORAGE="gcloud"
core_config_eum_source_maps_gcloud_bucket=""
core_config_eum_source_maps_gcloud_prefix=""
core_config_eum_source_maps_gcloud_storage_class=""
core_config_eum_source_maps_gcloud_bucket_long_term=""
core_config_eum_source_maps_gcloud_prefix_long_term=""
core_config_eum_source_maps_gcloud_storage_class_long_term=""
core_config_eum_source_maps_gcloud_service_account_key=""

#
# tolerations
# toleration_key and toleration_value apply to all components
# set specific component tolerations to overwrite default tolerations
# overwrite component tolerations in component env files for install profile.
#

TOLERATION_KEY=""
TOLERATION_VALUE=""

KAFKA_TOLERATION_KEY=""
KAFKA_TOLERATION_VALUE=""

ZOOKEEPER_TOLERATION_KEY=""
ZOOKEEPER_TOLERATION_VALUE=""

ELASTICSEARCH_TOLERATION_KEY=""
ELASTICSEARCH_TOLERATION_VALUE=""

POSTGRES_TOLERATION_KEY=""
POSTGRES_TOLERATION_VALUE=""

CASSANDRA_TOLERATION_KEY=""
CASSANDRA_TOLERATION_VALUE=""

CLICKHOUSE_TOLERATION_KEY=""
CLICKHOUSE_TOLERATION_VALUE=""

BEEINSTANA_TOLERATION_KEY=""
BEEINSTANA_TOLERATION_VALUE=""

INSTANA_TOLERATION_KEY=""
INSTANA_TOLERATION_VALUE=""

CORE_TOLERATION_KEY=""
CORE_TOLERATION_VALUE=""

UNIT_TOLERATION_KEY=""
UNIT_TOLERATION_VALUE=""

