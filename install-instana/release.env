#
# match instana plugin version with instana the version
#
declare -a __instana_version_list
declare -a __plugin_version_list

if [[ `uname -s` == "Darwin" ]]; then

   # on Darwin...
   #./release.env: line 9: declare: -A: invalid option
   # declare: usage: declare [-afFirtx] [-p] [name[=value] ...]
   declare __instana_sem_version

else
   declare -A __instana_sem_version
fi

function reset_instana_version_list() {
   __instana_version_list=()
}

#
# instana semantic version map
#
ivs=`./gen/bin/yq '.release.instana.[]|.version' ./release.yaml`

for iv in $ivs; do
   semver=`./gen/bin/yq ".release.instana.[]|select(.version==\"$iv\")|.semver" ./release.yaml`

   __instana_sem_version["$iv"]=$semver
done

#
# plugin version list
#
pvs=`./gen/bin/yq '.release.plugin.[]|.version' ./release.yaml`
for pv in $pvs; do
   __plugin_version_list+=($pv)
done

function instana_version_list_by_plugin() {
  local instana_plugin_version=$1

  reset_instana_version_list

  ivs=`./gen/bin/yq ".release.plugin.[]|select(.version==\"$instana_plugin_version\")|.instana.[]" ./release.yaml`

  if test -z "$ivs"; then
    echo release.env: Unsupported instana-plugin-version: $instana_plugin_version
    exit 1
  fi

  for iv in $ivs; do
    __instana_version_list+=($iv)
  done

  echo -n instana plugin: ${instana_plugin_version}, instana: 

  for iv in ${__instana_version_list[@]}
  do
    echo -n " "$iv\(${__instana_sem_version["${iv}"]}\)
  done

  echo ""
}

function show_version_combination() {
   for pv in ${__plugin_version_list[@]}
   do
   instana_version_list_by_plugin "$pv"
   done
}

function check_version_compat() {
   local instana_plugin_version=$1
   local instana_version=$2

   instana_version_list_by_plugin $instana_plugin_version

   #echo plugin: $instana_plugin_version, list: ${__instana_version_list[*]}, instana: $instana_version

   #local compatable=false
   for v in ${__instana_version_list[@]}
   do
      if test "$v" = "$instana_version"; then
         echo release.env: compat check pass: plugin: $instana_plugin_version, list: ${__instana_version_list[*]}, instana: $instana_version
         #compatable=true
         return 0
      fi
   done

   echo release.env: Unsupported instana-plugin-version / instana-version combination: $instana_plugin_version / $instana_version
   exit 1
}

